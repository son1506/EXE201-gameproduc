import { message } from "antd";

const API_URL = "https://openrouter.ai/api/v1/chat/completions";
const OPENROUTER_API_KEY = import.meta.env.VITE_OPENROUTER_API_KEY;

export async function callchat(chatMessages) {
  try {
    // Ki·ªÉm tra API key
    if (!OPENROUTER_API_KEY) {
      throw new Error("API key ch∆∞a ƒë∆∞·ª£c c·∫•u h√¨nh. Ki·ªÉm tra file .env");
    }

    if (!Array.isArray(chatMessages) || chatMessages.length === 0) {
      throw new Error("Kh√¥ng c√≥ tin nh·∫Øn n√†o ƒë·ªÉ g·ª≠i.");
    }

    console.log("üîç G·ª≠i request v·ªõi messages:", chatMessages);

    const response = await fetch(API_URL, {
      method: "POST",
      headers: {
        "Content-Type": "application/json",
        "Authorization": `Bearer ${OPENROUTER_API_KEY}`,
        "X-Title": "Sweeties AI Chat",
        "HTTP-Referer": window.location.origin,
      },
      body: JSON.stringify({
        model: "openai/gpt-3.5-turbo", // ‚úÖ S·ª≠a format model
        messages: [
          { role: "system", content: "B·∫°n l√† Sweeties AI - tr·ª£ l√Ω vui v·∫ª s·∫µn s√†ng gi√∫p!" },
          ...chatMessages,
        ],
        max_tokens: 1000,
        temperature: 0.7,
      }),
    });

    console.log("üì° Response status:", response.status);
    
    const data = await response.json();
    console.log("üìù Response data:", data);

    if (!response.ok) {
      // Log chi ti·∫øt l·ªói
      console.error("‚ùå API Error:", data);
      throw new Error(data.error?.message || `HTTP ${response.status}: ${data.message || "L·ªói kh√¥ng x√°c ƒë·ªãnh"}`);
    }

    if (!data.choices || !data.choices[0]?.message?.content) {
      throw new Error("Kh√¥ng c√≥ ph·∫£n h·ªìi t·ª´ chatbot.");
    }

    return data.choices[0].message.content;
  } catch (err) {
    console.error("üö® Chatbot Error:", err);
    
    // X·ª≠ l√Ω c√°c l·ªói ph·ªï bi·∫øn
    if (err.message.includes("401")) {
      message.error("API key kh√¥ng h·ª£p l·ªá. Ki·ªÉm tra l·∫°i c·∫•u h√¨nh.");
    } else if (err.message.includes("429")) {
      message.error("Qu√° nhi·ªÅu request. Vui l√≤ng th·ª≠ l·∫°i sau.");
    } else if (err.message.includes("Network")) {
      message.error("L·ªói k·∫øt n·ªëi m·∫°ng. Ki·ªÉm tra internet.");
    } else {
      message.error(err.message || "C√≥ l·ªói x·∫£y ra khi g·ªçi chatbot.");
    }
    
    throw err;
  }
}